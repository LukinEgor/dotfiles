# Alias vim to nvim
alias vi='nvim'

# Safe rm
alias rm="rm -i"

# Docker aliases
alias dc='docker-compose'
alias drmin='docker images | grep none | tr -s " " | cut -d" " -f 3 | xargs docker rmi'
alias dimgs='docker images'
alias drma='docker ps -aq | xargs docker rm -f'
alias docker_runit='docker run -it --rm $@'
alias docker_runit_here='docker run -v $(PWD):/app -w /app -it --rm $@'
alias dpsa='docker ps -a'
alias dcrs='docker-compose run --service-ports'

# Vagrant aliases
alias v='vagrant'
alias vh='vagrant halt'
alias vs='vagrant up && vagrant ssh'
alias vst='vagrant up && vagrant ssh -c "tmux -CC"'

alias l='ls -lhaG'

#git
alias g='git'
alias gc='git commit'
alias gs='git status'
alias gco='git checkout'
alias gap='git add -p'
alias gsl='git stash list'

# Up 'n' folders
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'

alias pg_start="launchctl load ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist"
alias pg_stop="launchctl unload ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist"


# Grep with color
alias grep='grep --color=auto '

# Find all cyr symbols
alias cyr='grep "[А-я,Ё,ё]" '

# Show all files extensions
alias lfe="find . -type f | sed -En 's|.*/[^/]+\.([^/.]+)$|\1|p' | sort -u"

## History configuration
# Appending history instead of rewriting
shopt -s histappend

# Ignore duplicates while appending and erase duplicates from old history
HISTCONTROL=ignoredups:erasedups

# Ignore aliases and some other patterns when write history
HISTIGNORE="$(alias | cut -d' ' -f2 | cut -d'=' -f1 | tr '\n' ':')[bf]g:exit:pwd:ls:cd:vi"

## Prompt configuration
if [ -f ~/.git-prompt.sh ]; then
    . ~/.git-prompt.sh
fi

if [ -f /usr/local/etc/bash_completion.d/git-completion.bash ]; then
  . /usr/local/etc/bash_completion.d/git-completion.bash
fi

# Show unstaged (*) and staged (+) changes next to the branch name.
GIT_PS1_SHOWDIRTYSTATE=1
# If something is stashed, then a '$' will be shown next to the branch name.
GIT_PS1_SHOWSTASHSTATE=1
# If there're untracked files, then a '%' will be shown next to the branch name.
GIT_PS1_SHOWUNTRACKEDFILES=1
# Show the difference between HEAD and its upstream with number of commits ahead/behind (+/-) upstream
GIT_PS1_SHOWUPSTREAM="auto verbose"

alias __git_ps1="git branch 2>/dev/null | grep '*' | sed 's/* \(.*\)/(\1)/'"

set_prompt () {
    orange='\[\033[0;33m\]'
    reset='\[\e[00m\]'
    PS1="$(__git_ps1) $orange\W\$$reset "
}
PROMPT_COMMAND=set_prompt

[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*

export PATH="/home/egor/.gem/ruby/2.4.0/bin:$PATH"
export VISUAL="vim"

export PATH=$HOME/bin:$PATH

export NVM_DIR="/home/egor/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm

export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3
export PATH="/home/egor/.config/yarn/global/node_modules/.bin:$PATH"

# Setting PATH for Python 3.7
# The original version is saved in .bash_profile.pysave
PATH="/Library/Frameworks/Python.framework/Versions/3.7/bin:${PATH}"
export PATH

# XKB_DIR="$HOME/.config/xkb"

# TODO: setup keybinding
# if [[ -n $(which setxkbmap) && -n $(which xkbcomp) ]]; then
#     setxkbmap -layout "us,ru" -option "" -option "ctrl:swapcaps" -print \
#     | xkbcomp -I "$XKB_DIR" - "${DISPLAY%%.*}" >/dev/null 2>&1
# fi

setxkbmap -option 'ctrl:swapcaps'
# setxkbmap -option grp:alt_shift_toggle us,ru

[ -f ~/.fzf.bash ] && source ~/.fzf.bash
