xkb_keymap {
    xkb_keycodes  { include "evdev+aliases(qwerty)" };


    xkb_compat    {
      include "complete"

      interpret osfLeft {
        repeat= True;
        action = RedirectKey(keycode=<LEFT>, clearmodifiers=Control);
      };

      interpret osfDown {
        repeat= True;
        action = RedirectKey(keycode=<DOWN>, clearmodifiers=Control);
      };

      interpret osfUp {
        repeat= True;
        action = RedirectKey(keycode=<UP>, clearmodifiers=Control);
      };

      interpret osfRight {
        repeat= True;
        action = RedirectKey(keycode=<RGHT>, clearmodifiers=Control);
      };

      interpret Caps_Lock+AnyOfOrNone(all) {
        action= SetMods(modifiers=Control);
      };
    };


    xkb_types     {
     include "complete"

     type "CUST_CAPSLOCK" {
       modifiers= Shift+Control;
       map[Shift] = Level2;            // Note that this maps Shift only of {Shift,Lock} to Level2. Alt+Shift will be mapped to Level2
       map[Shift+Control] = Level3;       // but Lock+Shift won't map to Level2 even without this line.
       map[Control] = Level3;
       level_name[Level1]= "Base";
       level_name[Level2]= "Shift";
       level_name[Level3]= "Control";
     };
    };


    xkb_symbols   {
      include "pc+us+ru:2+inet(evdev)"
      include "ctrl(swapcaps)"

      key <AC06> {
        type= "CUST_CAPSLOCK",
        symbols[Group1]= [h, H, osfLeft]
      };

      key <AC07> {
        type= "CUST_CAPSLOCK",
        symbols[Group1]= [j, J, osfDown]
      };

      key <AC08> {
        type= "CUST_CAPSLOCK",
        symbols[Group1]= [k, K, osfUp]
      };

      key <AC09> {
        type= "CUST_CAPSLOCK",
        symbols[Group1]= [l, L, osfRight]
      };

      key <AD11> {
       type= "CUST_CAPSLOCK",
       symbols[Group1]= [bracketleft, braceleft, Escape]
      };

      key <AB07> {
        type= "CUST_CAPSLOCK",
        symbols[Group1]= [m, M, Return]
      };
    };
};
